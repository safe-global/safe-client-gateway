import { Hex } from 'viem';
import { faker } from '@faker-js/faker';
import { GPv2Decoder } from '@/domain/swaps/contracts/decoders/gp-v2-decoder.helper';
import { setPreSignatureEncoder } from '@/domain/swaps/contracts/__tests__/encoders/gp-v2-encoder.builder';
import { ILoggingService } from '@/logging/logging.interface';

const loggingService = {
  debug: jest.fn(),
} as jest.MockedObjectDeep<ILoggingService>;
const loggingServiceMock = jest.mocked(loggingService);

describe('GPv2Decoder', () => {
  let target: GPv2Decoder;

  beforeEach(() => {
    jest.resetAllMocks();
    target = new GPv2Decoder(loggingServiceMock);
  });

  it('decodes a setPreSignature function call correctly', () => {
    const encoder = setPreSignatureEncoder();
    const args = encoder.build();
    const data = encoder.encode();

    expect(target.decodeFunctionData({ data })).toEqual({
      functionName: 'setPreSignature',
      args: [args.orderUid, args.signed],
    });
  });

  it('throws if the function call cannot be decoded', () => {
    const data = faker.string.hexadecimal({ length: 138 }) as Hex;

    expect(() => target.decodeFunctionData({ data })).toThrow();
  });

  it('gets orderUid from setPreSignature function call', () => {
    const setPreSignature = setPreSignatureEncoder();
    const args = setPreSignature.build();

    const orderUid = target.getOrderUidFromSetPreSignature(
      setPreSignature.encode(),
    );

    expect(orderUid).toBe(args.orderUid);
  });

  it('should decode an order from a settle function call', () => {
    /**
     * @see https://sepolia.etherscan.io/tx/0x481d710c69dab0215213e50085c30d7e632e3135c25c1f05065e9dc875f87121
     */
    const data =
      '0x13d79a0b0000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000008600000000000000000000000000000000000000000000000000000000000000004000000000000000000000000be72e441bf55620febc26715db68d3494213d8cb000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000be72e441bf55620febc26715db68d3494213d8cb00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000358c1113177ebd5000000000000000000000000000000000000000000000003f5106b282be12c4d000000000000000000000000000000000000000000000003f5106b282be12c4d00000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000300000000000000000000000031eac7f0141837b266de30f4dc9af15629bd538100000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000003b1b5fbf83bf2f71600000000000000000000000000000000000000000000000000000000666af0a3f7be7261f56698c258bf75f888d68a00c85b22fb21958b9009c719eb88aebda00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000004d831eac7f0141837b266de30f4dc9af15629bd53815fd7e97ddaee378bd0eb30ddf479272accf91761e697bc00e067a268f95f1d2732ed230bd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e489000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000002200000000000000000000000000000000000000000000000000000000000000180000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000be72e441bf55620febc26715db68d3494213d8cb00000000000000000000000031eac7f0141837b266de30f4dc9af15629bd538100000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000003b1b5fbf83bf2f71600000000000000000000000000000000000000000000000000000000666af0a3f7be7261f56698c258bf75f888d68a00c85b22fb21958b9009c719eb88aebda00000000000000000000000000000000000000000000000000000000000000000f3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677500000000000000000000000000000000000000000000000000000000000000005a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc95a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc90000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006cf1e9ca41f7611def408122793c358a3d11e5a500000000000000000000000000000000000000000000000000000019011918e600000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000140000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000be72e441bf55620febc26715db68d3494213d8cb00000000000000000000000031eac7f0141837b266de30f4dc9af15629bd538100000000000000000000000000000000000000000000000003782dace9d90000000000000000000000000000000000000000000000000003b1b5fbf83bf2f7160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000003840000000000000000000000000000000000000000000000000000000000000000f7be7261f56698c258bf75f888d68a00c85b22fb21958b9009c719eb88aebda00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000026000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000086dcd3293c53cf8efd7303b57beb2a3f671dde980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000001048803dbee0000000000000000000000000000000000000000000000041a38b8642795b4e400000000000000000000000000000000000000000000000003810f6985c9400000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000009008d19f58aabd9ed0d60971565aa8510560ab41ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000fff9976782d46cc05630d1f6ebab18b2324d6b14000000000000000000000000be72e441bf55620febc26715db68d3494213d8cb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b83733';

    const order = target.decodeOrderFromSettle(data);

    expect(order).toStrictEqual({
      appData:
        '0xf7be7261f56698c258bf75f888d68a00c85b22fb21958b9009c719eb88aebda0',
      buyAmount: BigInt('68145650380202768150'),
      buyToken: '0xbe72E441BF55620febc26715db68d3494213D8Cb',
      buyTokenBalance: 'erc20',
      feeAmount: BigInt('0'),
      kind: 'sell',
      partiallyFillable: false,
      receiver: '0x31eaC7F0141837B266De30f4dc9aF15629Bd5381',
      sellAmount: BigInt('250000000000000000'),
      sellToken: '0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14',
      sellTokenBalance: 'erc20',
      validTo: 1718284451,
    });
  });
});
